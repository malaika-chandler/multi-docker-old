# There is an upstream we're calling client located at
# client:3000 (client defined in docker-compose)
upstream client {
	server client:3000;
}

# We tell Nginx where to look using the keyword "server",
# but our api server is also named server
#
# upstream server {
# 	server server:5000;
# }
#
# So we'll refer to our server as api to make nginx happy,
# changing the name in docker-compose as well
upstream api {
	server api:5000;
}

server {
	listen 80;

	# anything matching / should be passed to the client server
	location / {
		proxy_pass http://client;
	}

	# Necessary to fix sockjs console errors
	# If we were doing a real production version of this,
	# this section would probably not be included as it's
	# just dev-specific websocket stuff
	location /sockjs-node {
		proxy_pass http://client;

		# To specifically allow websocket connections
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "Upgrade";
	}

	# Anything matching /api
	location /api {
		# rewrite rule saying if anything matches regex, grab
		# the stuff in parens, stripping off the leading /api
		# break tells nginx to not try applying more rules
		rewrite /api/(.*) /$1 break;

		proxy_pass http://api;
	}
}